{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file:///Users/ogun/Documents/ogunme/lib/blog.ts"],"sourcesContent":["import fs from 'fs';\nimport path from 'path';\nimport matter from 'gray-matter';\n\nconst postsDirectory = path.join(process.cwd(), 'posts');\n\nexport interface BlogPost {\n  slug: string;\n  title: string;\n  date: string;\n  excerpt: string;\n  tags: string[];\n  content: string;\n}\n\nexport function getAllPosts(): BlogPost[] {\n  const fileNames = fs.readdirSync(postsDirectory);\n  const allPostsData = fileNames\n    .filter((fileName) => fileName.endsWith('.md'))\n    .map((fileName) => {\n      const slug = fileName.replace(/\\.md$/, '');\n      const fullPath = path.join(postsDirectory, fileName);\n      const fileContents = fs.readFileSync(fullPath, 'utf8');\n      const { data, content } = matter(fileContents);\n\n      return {\n        slug,\n        title: data.title,\n        date: data.date,\n        excerpt: data.excerpt,\n        tags: data.tags || [],\n        content,\n      };\n    });\n\n  // Sort posts by date\n  return allPostsData.sort((a, b) => (a.date < b.date ? 1 : -1));\n}\n\nexport function getPostBySlug(slug: string): BlogPost | null {\n  try {\n    const fullPath = path.join(postsDirectory, `${slug}.md`);\n    const fileContents = fs.readFileSync(fullPath, 'utf8');\n    const { data, content } = matter(fileContents);\n\n    return {\n      slug,\n      title: data.title,\n      date: data.date,\n      excerpt: data.excerpt,\n      tags: data.tags || [],\n      content,\n    };\n  } catch {\n    return null;\n  }\n}\n\nexport function getAllTags(): string[] {\n  const posts = getAllPosts();\n  const tags = new Set<string>();\n  \n  posts.forEach((post) => {\n    post.tags.forEach((tag) => tags.add(tag));\n  });\n  \n  return Array.from(tags).sort();\n}\n\nexport function getPostsByTag(tag: string): BlogPost[] {\n  const posts = getAllPosts();\n  return posts.filter((post) => post.tags.includes(tag));\n}"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;;;;AAEA,MAAM,iBAAiB,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI;AAWzC,SAAS;IACd,MAAM,YAAY,6FAAA,CAAA,UAAE,CAAC,WAAW,CAAC;IACjC,MAAM,eAAe,UAClB,MAAM,CAAC,CAAC,WAAa,SAAS,QAAQ,CAAC,QACvC,GAAG,CAAC,CAAC;QACJ,MAAM,OAAO,SAAS,OAAO,CAAC,SAAS;QACvC,MAAM,WAAW,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,gBAAgB;QAC3C,MAAM,eAAe,6FAAA,CAAA,UAAE,CAAC,YAAY,CAAC,UAAU;QAC/C,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,uIAAA,CAAA,UAAM,AAAD,EAAE;QAEjC,OAAO;YACL;YACA,OAAO,KAAK,KAAK;YACjB,MAAM,KAAK,IAAI;YACf,SAAS,KAAK,OAAO;YACrB,MAAM,KAAK,IAAI,IAAI,EAAE;YACrB;QACF;IACF;IAEF,qBAAqB;IACrB,OAAO,aAAa,IAAI,CAAC,CAAC,GAAG,IAAO,EAAE,IAAI,GAAG,EAAE,IAAI,GAAG,IAAI,CAAC;AAC7D;AAEO,SAAS,cAAc,IAAY;IACxC,IAAI;QACF,MAAM,WAAW,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,gBAAgB,GAAG,KAAK,GAAG,CAAC;QACvD,MAAM,eAAe,6FAAA,CAAA,UAAE,CAAC,YAAY,CAAC,UAAU;QAC/C,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,uIAAA,CAAA,UAAM,AAAD,EAAE;QAEjC,OAAO;YACL;YACA,OAAO,KAAK,KAAK;YACjB,MAAM,KAAK,IAAI;YACf,SAAS,KAAK,OAAO;YACrB,MAAM,KAAK,IAAI,IAAI,EAAE;YACrB;QACF;IACF,EAAE,OAAM;QACN,OAAO;IACT;AACF;AAEO,SAAS;IACd,MAAM,QAAQ;IACd,MAAM,OAAO,IAAI;IAEjB,MAAM,OAAO,CAAC,CAAC;QACb,KAAK,IAAI,CAAC,OAAO,CAAC,CAAC,MAAQ,KAAK,GAAG,CAAC;IACtC;IAEA,OAAO,MAAM,IAAI,CAAC,MAAM,IAAI;AAC9B;AAEO,SAAS,cAAc,GAAW;IACvC,MAAM,QAAQ;IACd,OAAO,MAAM,MAAM,CAAC,CAAC,OAAS,KAAK,IAAI,CAAC,QAAQ,CAAC;AACnD","debugId":null}},
    {"offset": {"line": 86, "column": 0}, "map": {"version":3,"sources":["file:///Users/ogun/Documents/ogunme/app/blog/%5Bslug%5D/layout.tsx"],"sourcesContent":["import { getAllPosts } from '@/lib/blog';\n\nexport function generateStaticParams() {\n  const posts = getAllPosts();\n  return posts.map((post) => ({\n    slug: post.slug,\n  }));\n}\n\nexport default function Layout({ children }: { children: React.ReactNode }) {\n  return <>{children}</>;\n}"],"names":[],"mappings":";;;;;AAAA;;;AAEO,SAAS;IACd,MAAM,QAAQ,CAAA,GAAA,2GAAA,CAAA,cAAW,AAAD;IACxB,OAAO,MAAM,GAAG,CAAC,CAAC,OAAS,CAAC;YAC1B,MAAM,KAAK,IAAI;QACjB,CAAC;AACH;AAEe,SAAS,OAAO,EAAE,QAAQ,EAAiC;IACxE,qBAAO;kBAAG;;AACZ","debugId":null}}]
}